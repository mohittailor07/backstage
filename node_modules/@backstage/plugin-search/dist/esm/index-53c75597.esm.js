import React, { useCallback, useState } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { SearchBarBase } from '@backstage/plugin-search-react';
import qs from 'qs';
import { useNavigate } from 'react-router-dom';
import { r as rootRouteRef } from './index-72149ea7.esm.js';
import { useRouteRef } from '@backstage/core-plugin-api';
import '@backstage/core-components';
import '@material-ui/core';
import '@material-ui/core/Box';
import '@material-ui/core/Button';
import '@material-ui/core/IconButton';
import '@material-ui/icons/ArrowForward';
import '@material-ui/icons/Close';
import '@backstage/errors';
import '@backstage/version-bridge';
import 'react-use/lib/useUpdateEffect';
import 'react-use/lib/usePrevious';
import 'react-use/lib/useEffectOnce';
import '@material-ui/icons/ExpandMore';
import '@material-ui/icons/FontDownload';
import 'react-use/lib/useAsync';

const useNavigateToQuery = () => {
  const searchRoute = useRouteRef(rootRouteRef);
  const navigate = useNavigate();
  return useCallback(
    ({ query }) => {
      const queryString = qs.stringify({ query }, { addQueryPrefix: true });
      navigate(`${searchRoute()}${queryString}`);
    },
    [navigate, searchRoute]
  );
};

const useStyles = makeStyles({
  root: {
    border: "1px solid #555",
    borderRadius: "6px",
    fontSize: "1.5em"
  }
});
const HomePageSearchBar = (props) => {
  const classes = useStyles(props);
  const [query, setQuery] = useState("");
  const handleSearch = useNavigateToQuery();
  const handleSubmit = () => {
    handleSearch({ query });
  };
  const handleChange = useCallback(
    (value) => {
      setQuery(value);
    },
    [setQuery]
  );
  return /* @__PURE__ */ React.createElement(
    SearchBarBase,
    {
      classes: { root: classes.root },
      value: query,
      onSubmit: handleSubmit,
      onChange: handleChange,
      ...props
    }
  );
};

export { HomePageSearchBar };
//# sourceMappingURL=index-53c75597.esm.js.map
